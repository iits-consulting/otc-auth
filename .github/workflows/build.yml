name: Build
on:
  pull_request:
  push:
    branches-ignore:
      - main  # Explicitly ignore main branch pushes

jobs:
  lint:
    name: Lint the otc-auth source code
    runs-on: ubuntu-24.04
    steps:
      - name: Setup Go environment
        uses: actions/setup-go@v5
        with:
          go-version: ^1.20
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: latest
          github-token: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build the otc-auth
    runs-on: ubuntu-24.04
    steps:
      - name: Setup Go environment
        uses: actions/setup-go@v5
        with:
          go-version: ^1.20
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi
      - name: Test
        run: |
          go test -coverprofile=coverage.out -v ./...
          echo "COVERAGE_REPORT=$(go tool cover -func=coverage.out)" >> $GITHUB_ENV
          echo "COVERAGE=$(echo COVERAGE_REPORT | grep total: | awk '{print $3}')" >> $GITHUB_ENV
      - name: Create or update coverage comment
        if: github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## Code Coverage Report
            ```
            ${{ env.COVERAGE_REPORT }}
            ```
            **Total Coverage:** ${{ env.COVERAGE }}
          edit-mode: replace
      - name: Build
        run: go build -v -o otc-auth .
      - name: Upload the built binary executable for testing
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: otc-auth
