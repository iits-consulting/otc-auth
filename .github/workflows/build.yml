name: Build for PR
on:
  pull_request:

jobs:
  lint:
    name: Lint the otc-auth source code
    runs-on: ubuntu-24.04
    steps:
      - name: Setup Go environment
        uses: actions/setup-go@v5
        with:
          go-version: ^1.20
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: latest
          github-token: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build the otc-auth
    runs-on: ubuntu-24.04
    steps:
      - name: Setup Go environment
        uses: actions/setup-go@v5
        with:
          go-version: ^1.20
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi
      - name: Test
        run: |
          go test -coverprofile=coverage.out -v ./...
          COVERAGE_REPORT=$(go tool cover -func=coverage.out 2>/dev/null || echo "No coverage data")
          COVERAGE=$(grep '^total:' <<< "$COVERAGE_REPORT" | grep -oE '[0-9]+\.[0-9]+%|[0-9]+%' || echo "0%")
          echo "COVERAGE_REPORT<<EOF" >> $GITHUB_ENV
          echo "$COVERAGE_REPORT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "COVERAGE=$COVERAGE" >> $GITHUB_ENV
      - name: Find Comment
        if: github.event.pull_request.base.ref != 'main'
        uses: peter-evans/find-comment@v3
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: "## Code Coverage Report"
      - name: Create or update coverage comment
        if: github.event.pull_request.base.ref != 'main'
        uses: peter-evans/create-or-update-comment@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## Code Coverage Report
            **Total Coverage:** ${{ env.COVERAGE }}
            <details>
            <summary>Details</summary>
            <blockquote>
            
            ```text
            ${{ env.COVERAGE_REPORT }}
            ```
            <blockquote>
            </details>
          edit-mode: replace
          comment-id: ${{ steps.fc.outputs.comment-id }}
      - name: Build
        run: go build -v -o otc-auth .
      - name: Upload the built binary executable for testing
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: otc-auth
